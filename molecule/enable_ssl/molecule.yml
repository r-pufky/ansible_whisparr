---
# yamllint disable rule:line-length
###############################################################################
# Enable SSL
###############################################################################
# SSL is enabled and toggled correctly.
#
# Tests:
# * /var/lib/whisparr/whisparr.pfx exists.
# * toggling ssl on, then off removes whisparr.pfx.
#  <EnableSsl>False</EnableSsl>  # true requires ssl_cert
#  <SslCertPath>/var/lib/whisparr/snakeoil.pfx</SslCertPath>
#  <SslCertPassword>testing</SslCertPassword>  # stored plaintext.
# * whisparr_config_enable_ssl -- test when false w and w/o cert.

dependency:
  name: 'galaxy'
driver:
  name: 'podman'
provisioner:
  name: 'ansible'
  config_options:
    defaults:
      interpreter_python: 'auto_silent'
      callback_whitelist: 'profile_tasks, timer, yaml'
    ssh_connection:
      pipelining: false
  inventory:
    group_vars:
      all:
        whisparr_config_enable_ssl: true
        whisparr_config_ssl_cert_path: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/cache/test.pfx'
        whisparr_config_ssl_cert_password: 'test'
        whisparr_media_root_folders: ['/data/media']
        whisparr_config_api_key: 'abcdef1234567890abcdef1234567890'
        repo_testing_enable: true
        repo_testing_versions:
          - comment: 'default'
            version: '2.0.0.787'
            asset: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/cache/Whisparr.develop.2.0.0.787.linux-core-x64.tar.gz'
          - comment: 'toggle'
            version: '2.0.0.787'
            asset: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/cache/Whisparr.develop.2.0.0.787.linux-core-x64.tar.gz'
platforms:
  - name: 'whisparr-debian-12-enable_ssl'
    image: 'ghcr.io/hifis-net/debian-systemd:12'
    systemd: 'always'
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
    command: '/lib/systemd/systemd'
    pre_build_image: true
  - name: 'whisparr-debian-12-enable_ssl-toggle'
    image: 'ghcr.io/hifis-net/debian-systemd:12'
    systemd: 'always'
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
    command: '/lib/systemd/systemd'
    pre_build_image: true
verifier:
  name: 'ansible'
lint: |
  set -e
  yamllint .
  ansible-lint .
scenario:
  test_sequence:
    # - 'dependency'
    # - 'cleanup'
    - 'destroy'
    - 'syntax'
    - 'create'
    - 'prepare'
    - 'converge'
    # - 'idempotence'  # Files created, extracted, created, deleted.
    # - 'side_effect'
    - 'verify'
    # - 'cleanup'
    - 'destroy'
