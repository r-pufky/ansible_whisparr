---
###############################################################################
# Default
###############################################################################
# Default configuration is deployed successfully using postgres. Configuration
# should succeed with and without whisparr_srv_user_data_manage_enable.
#
# Tests:
# * config.xml set.
# * whisparr.service active and running.
# * /data/whisparr/config created with correct permissions.
# * /data/media created with correct permissions.
# * /data/media - file permissions recursively set with correct permissions.
# * /data/whisparr/config/update_script does not exist.
# * /data/whisparr/config/whisparr.pfx does not exist.
# * Postgres backed instance launches correctly.

dependency:
  name: 'galaxy'
driver:
  name: 'podman'
provisioner:
  name: 'ansible'
  config_options:
    defaults:
      interpreter_python: 'auto_silent'
      callback_whitelist: 'profile_tasks, timer, yaml'
    ssh_connection:
      pipelining: false
  inventory:
    group_vars:
      all:
        whisparr_srv_media_root_folders: ['/data/media']
        whisparr_cfg_api_key: 'abcdef1234567890abcdef1234567890'
        repo_testing_enable: true
        repo_testing_versions:
          - comment: 'default'
            version: '2.0.0.1250'
            asset: '{{
                lookup("env", "MOLECULE_PROJECT_DIRECTORY") ~
                "/molecule/cache/" ~
                "Whisparr.develop.2.0.0.1250.linux-core-x64.tar.gz"
              }}'
        whisparr_cfg_database_type: 'postgres'
        whisparr_cfg_database_host: 'localhost'
        whisparr_cfg_database_password: 'test'
    host_vars:
      whisparr-debian-13-postgres_user_data:
        whisparr_srv_user_data_manage_enable: true
platforms:
  - name: 'whisparr-debian-13-postgres'
    image: 'ghcr.io/hifis-net/debian-systemd:13'
    systemd: 'always'
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
    command: '/lib/systemd/systemd'
    pre_build_image: true
    published_ports:
      - '6969/tcp'
  - name: 'whisparr-debian-13-postgres_user_data'
    image: 'ghcr.io/hifis-net/debian-systemd:13'
    systemd: 'always'
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
    command: '/lib/systemd/systemd'
    pre_build_image: true
verifier:
  name: 'ansible'
lint: |
  set -e
  yamllint .
  ansible-lint .
scenario:
  test_sequence:
    # - 'dependency'
    # - 'cleanup'
    - 'destroy'
    - 'syntax'
    - 'create'
    - 'prepare'
    - 'converge'
    # - 'idempotence'  # Files created, extracted, created, deleted.
    # - 'side_effect'
    - 'verify'
    # - 'cleanup'
    - 'destroy'
