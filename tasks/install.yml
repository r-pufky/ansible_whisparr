---
# yamllint disable rule:line-length
###############################################################################
# Whisparr Install
###############################################################################
# Whisparr does not have any 'release' versions, only current head. Instead,
# just install whisparr if the install location does not exist. After release,
# revert back to standard *arr services, like sonarr or radarr.
#
# Use static URL to download binary release to install the build without
# requiring a manual download and build. Use the pre-compiled binary URL from
# the installation script.
#
# TODO(role): Remove this and revert to standard *arr (sonarr, radarr) process
#     when release happens.
#
# Args:
#   _whisparr_archive: str - path to local archive.
#   _whisparr_target: str - whisparr target version.
#   _whisparr_migrate_metadata: list of str - files and directories to migrate.
#
# Reference:
# * https://github.com/Servarr/Wiki/blob/master/servarr/servarr-install-script.sh
# yamllint enable rule:line-length

- name: 'Install | packages'
  ansible.builtin.include_role:
    name: 'r_pufky.deb.apt'
  vars:
    apt_packages:
      - '{{ whisparr_role_packages }}'
    apt_package_update_cache: true

- name: 'Install | check install (until a release version happens)'
  ansible.builtin.stat:
    path: '{{ whisparr_role_repo_extract_symlink }}'
  register: _whisparr_installed

- name: 'Install | Whisparr package {{ whisparr_service_version }}'
  when: >
    not _whisparr_installed.stat.exists and
    not whisparr_service_force_config_only_enable
  ansible.builtin.include_role:
    name: 'r_pufky.deb.repo'
  vars:
    # TODO(role): revert to *arr standard when released.
    repo_release_owner: '{{ whisparr_role_repo_release_owner }}'
    repo_release_repo: '{{ whisparr_role_repo_release_repo }}'
    repo_release_tag: '{{ whisparr_service_version }}'
    repo_release_asset: '{{ whisparr_role_repo_release_asset }}'
    repo_release_asset_static_url:
      '{{ whisparr_role_repo_release_asset_static_url }}'
    repo_file_owner: '{{ whisparr_user }}'
    repo_file_group: '{{ whisparr_group }}'
    repo_extract_dir: '{{ whisparr_role_repo_extract_dir }}'
    repo_extract_symlink: '{{ whisparr_role_repo_extract_symlink }}'
    repo_extract_migrate_files: '{{ _whisparr_migrate_metadata }}'
    repo_extract_delete_old_versions:
      '{{ whisparr_service_delete_old_versions_enable }}'
    repo_force_overwrite: '{{ whisparr_service_force_overwrite }}'
    repo_extract_mode: 'a-st,o-rwx'
    repo_extract_extra_opts: '--strip-components=1'
