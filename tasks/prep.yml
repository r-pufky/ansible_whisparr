---
# yamllint disable rule:line-length
###############################################################################
# Whisparr Prep
###############################################################################
# *arr services use the same codebase; any bugs or fixes should be checked for
# all related services.

# yamllint disable rule:line-length
- name: 'Prep | assert database requirements'
  when: _whisparr_cfg_database_type.raw == 'postgres'
  ansible.builtin.assert:
    quiet: true
    that:
      - _whisparr_cfg_database_host.raw | length > 0
      - _whisparr_cfg_database_port.raw > 0
      - _whisparr_cfg_database_user.raw | length > 0
      - _whisparr_cfg_database_password.raw | length > 0
      - _whisparr_cfg_database_main.raw | length > 0
      - _whisparr_cfg_database_log.raw | length > 0
    fail_msg: |
      ╭───────────────────────────────────────────────────────────────────╮
      │                                                                   │
      │   whisparr_cfg_database_type=postgres requires all options set.   │
      │                                                                   │
      ├───────────────────────────────────────────────────────────────────╯
      │ whisparr_cfg_database_host: '{{ _whisparr_cfg_database_host.raw }}'
      │ whisparr_cfg_database_port: '{{ _whisparr_cfg_database_port.raw }}'
      │ whisparr_cfg_database_user: '{{ _whisparr_cfg_database_user.raw }}'
      │ whisparr_cfg_database_password: '{{ _whisparr_cfg_database_password.raw }}'
      │ whisparr_cfg_database_main: '{{ _whisparr_cfg_database_main.raw }}'
      │ whisparr_cfg_database_log: '{{ _whisparr_cfg_database_log.raw }}'
# yamllint enable rule:line-length

- name: 'Prep | assert SSL requirements'
  when: _whisparr_cfg_enable_ssl.raw
  ansible.builtin.assert:
    quiet: true
    that:
      - _whisparr_cfg_ssl_cert_path.raw | length > 0
    fail_msg: |
      ╭───────────────────────────────────────────────────────────────────╮
      │                                                                   │
      │                     SSL Requirements NOT met.                     │
      │                                                                   │
      ├───────────────────────────────────────────────────────────────────╯
      │ whisparr_cfg_enable_ssl=true requires:
      │
      │ whisparr_cfg_ssl_cert_path set

- name: 'Prep | assert update script requirements'
  when: not _whisparr_cfg_update_mechanism.raw
  ansible.builtin.assert:
    quiet: true
    that:
      - _whisparr_cfg_update_script_path.raw | length > 0
    fail_msg: |
      ╭───────────────────────────────────────────────────────────────────╮
      │                                                                   │
      │              Update mechanism requirements NOT met.               │
      │                                                                   │
      ├───────────────────────────────────────────────────────────────────╯
      │ whisparr_cfg_update_mechanism=false requires:
      │
      │ whisparr_cfg_update_script_path set.

- name: 'Prep | manage users'
  when: _whisparr_srv_create_user.raw
  ansible.builtin.include_role:
    name: 'r_pufky.deb.users'
    tasks_from: 'role_account_add.yml'
  vars:
    users_role_user: '{{ whisparr_role_user }}'
    users_role_group: '{{ whisparr_role_group }}'

- name: 'Prep | enumerate system user {{ _whisparr_srv_user.raw }}'
  ansible.builtin.user:
    name: '{{ _whisparr_srv_user.raw }}'
  check_mode: true
  changed_when: false
  register: _whisparr_srv_user_query

- name: 'Prep | parse system user UID/GID'
  ansible.builtin.set_fact:
    _whisparr_srv_user: '{{
        _whisparr_srv_user |
        combine({"role_uid": _whisparr_srv_user_query.uid})
      }}'
    _whisparr_srv_group: '{{
        _whisparr_srv_group |
        combine({"role_gid": _whisparr_srv_user_query.group})
      }}'

- name: 'Prep | stop services'
  ansible.builtin.systemd:
    name: '{{ item }}'
    state: 'stopped'
  failed_when: false
  loop:
    - 'whisparr.service'
